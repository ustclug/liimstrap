#!/bin/bash

set -e

BASE="$(dirname "$0")"
ROOT="$1"
LIIMSUSER="liims"

if [ ! -d "$ROOT" ]; then
  exit 1
fi

run() {
  chroot "$ROOT" "$@"
}

add_file() {
  while [ "$#" -ne 0 ]; do
    rsync -rlp "$BASE/$1" "$ROOT/$1"
    shift
  done
}

install_package() {
    DEBIAN_FRONTEND=noninteractive chroot "$ROOT" apt-get install --no-install-recommends --yes "$@"
}

check_sha256() {
    local file="$1"
    local sha256="$2"
    if [[ "$sha256" = $(sha256sum "$file" | cut -d ' ' -f 1) ]]; then
        return
    else
        echo "$file is corrupt."
        exit 1
    fi
}

# root password
if [ -n "$ROOT_PASSWORD" ]; then
  echo "Using root password from environment"
else
  ROOT_PASSWORD="$(head -c 6 /dev/urandom | base64)"
  echo "Root password not specified, using \"$ROOT_PASSWORD\""
fi

# External packages
MIDORI_URL="${MIDORI_URL:-https://ftp.lug.ustc.edu.cn/software/liims/midori-liims_9.0-1_amd64.deb}"
SOGOUPINYIN_URL="${SOGOUPINYIN_URL:-http://cdn2.ime.sogou.com/dl/index/1639750479/sogoupinyin_3.4.0.9700_amd64.deb}"

# debootstrap
debootstrap bookworm "$ROOT" "$APT_SOURCE/debian"
mount -t tmpfs none "$ROOT/dev"
chmod 755 "$ROOT/dev"
mknod -m0666 "$ROOT/dev/null" c 1 3
mknod -m0666 "$ROOT/dev/random" c 1 8
mknod -m0666 "$ROOT/dev/urandom" c 1 9
mknod -m0666 "$ROOT/dev/zero" c 1 5
ln -sf /proc/self/fd/0 "$DST/dev/stdin"
ln -sf /proc/self/fd/1 "$DST/dev/stdout"
ln -sf /proc/self/fd/2 "$DST/dev/stderr"
mkdir -p "$ROOT/dev/pts"
mount -t devpts none "$ROOT/dev/pts"
mount -t proc proc "$ROOT/proc"
mount -t tmpfs none "$ROOT/run"
mount -t sysfs sys "$ROOT/sys"
mount -t tmpfs none "$ROOT/tmp"

# apt update
add_file /etc/apt/sources.list
sed -Ei "s,https?://mirrors.ustc.edu.cn,$APT_SOURCE,g" "$ROOT/etc/apt/sources.list"
run apt-get update

# install packages
install_package xterm xserver-xorg xserver-xorg-video-vesa xserver-xorg-video-nouveau \
  xserver-xorg-video-intel xserver-xorg-video-fbdev xcompmgr xauth \
  busybox dhcpcd5 dnsutils htop inetutils-ftp iputils-ping \
  inetutils-telnet iptables-persistent iproute2 iputils-arping iputils-clockdiff \
  initramfs-tools libpam-systemd mtr-tiny ndisc6 netdata nyancat \
  procps rsync scrot sed ssh tar usbutils vim \
  gnome-icon-theme gnome-themes-extra openbox slim \
  fonts-arphic-uming fonts-droid-fallback fonts-wqy-zenhei xfonts-terminus \
  fcitx fcitx-frontend-gtk2 fcitx-frontend-gtk3 \
  fcitx-pinyin fcitx-table-wubi fcitx-ui-classic \
  bash-completion curl ca-certificates jq systemd-timesyncd locales net-tools zstd \
  x11-utils dbus-x11 xfonts-base xfonts-intl-chinese x11-xserver-utils

# Install fbpanel from bullseye
wget --progress=dot:binary -O "$ROOT/tmp/fbpanel.deb" "https://mirrors.ustc.edu.cn/debian/pool/main/f/fbpanel/fbpanel_7.0-4_amd64.deb"
check_sha256 "$ROOT/tmp/fbpanel.deb" "3ad23ecc54fb33a768c9a3c8995b3d5205eae21c06ceec121278e36241876a31"
install_package /tmp/fbpanel.deb

# Install customized midori
wget --progress=dot:binary -O "$ROOT/tmp/midori.deb" "$MIDORI_URL"
check_sha256 "$ROOT/tmp/midori.deb" "a9a64bdfb1a0a52761b041b22c0991222a627093311493e883ed8ea6a674a279"
install_package /tmp/midori.deb
# Install sogoupinyin
# ref: https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=fcitx-sogoupinyin
wget --progress=dot:giga -O "$ROOT/tmp/sogoupinyin.deb" "$SOGOUPINYIN_URL"
check_sha256 "$ROOT/tmp/sogoupinyin.deb" "0a8de6e87c1402db49869754fa08dd58c448cd44f06b73b825debe7bea27d74d"
install_package /tmp/sogoupinyin.deb libasound2 libgomp1  # missing deps in sogoupinyin

# Assistant scripts and programs
echo "export LIIMSUSER=$LIIMSUSER" >> "$ROOT/etc/profile.d/liims.sh"
for script in "$BASE"/bin/*.sh; do
  install -Dm 755 "$script" "$ROOT/usr/local/bin"
done

unset CFLAGS
cc "$BASE/bin/xidle.c" -o "$ROOT/usr/local/bin/xidle" -O2 -s -lX11 -lXss

# SSH login for root
add_file /etc/ssh/
printf "root:%s\n" "$ROOT_PASSWORD" | run chpasswd
run systemctl enable ssh

# dhcpcd
run systemctl enable dhcpcd

# time and NTP
TZ=Asia/Shanghai
echo "$TZ" > "$ROOT/etc/timezone"
run ln -sfn "/usr/share/zoneinfo/$TZ" /etc/localtime
add_file /etc/systemd/timesyncd.conf
run systemctl enable systemd-timesyncd.service

# locale
cp "$BASE/etc/locale.gen" "$ROOT/etc/locale.gen"
run locale-gen

# iptables
add_file /etc/iptables/
run systemctl enable netfilter-persistent.service

# cron jobs
add_file /etc/systemd/system/
run systemctl enable liims-reset.timer reboot.timer

# slim
add_file /etc/slim.conf
run systemctl set-default graphical.target

# netdata
add_file /etc/netdata/
run chown -R netdata:netdata "/usr/share/netdata/web/"
run systemctl enable netdata

# prevent systemd from changing network interface name
run ln -sf /dev/null /etc/udev/rules.d/80-net-setup-link.rules

# user specific
run userdel -fr "$LIIMSUSER" || true
run useradd -m -o -u 1000 -g users -s /bin/bash "$LIIMSUSER"
cp -r "$BASE/user/." "$ROOT/home/$LIIMSUSER"
run chown -R "$LIIMSUSER:" "/home/$LIIMSUSER"
cp "$BASE/user/.bashrc" "$ROOT/root/"

# prevent sogou from modifying fcitx config
chmod -R a-w "$ROOT/home/$LIIMSUSER/.config/fcitx/"

# hostname & version
echo "liims" > "$ROOT/etc/hostname"
VERSION="$(date +%y%m%d)"
if [ -n "$GITHUB_RUN_NUMBER" ]; then
  VERSION="$VERSION-gh-$GITHUB_RUN_NUMBER"
fi
echo "$VERSION" > "$ROOT/etc/liims_version"

# kernel
install -Dm644 "$BASE/initramfs-tools/initramfs.conf" "$ROOT/etc/initramfs-tools/initramfs.conf"
install -Dm644 "$BASE/initramfs-tools/modules" "$ROOT/etc/initramfs-tools/modules"
install -Dm755 "$BASE/initramfs-tools/scripts/init-bottom/overlay.sh" "$ROOT/etc/initramfs-tools/scripts/init-bottom/overlay.sh"
install_package linux-image-amd64 firmware-linux firmware-realtek

# Remove unused locales
install_package localepurge
add_file /etc/locale.nopurge
run localepurge

set +e

# Remove unused docs
rm -rf "$ROOT/usr/share/doc/"*

# networking/miscellaneous
add_file /etc/hosts /etc/resolv.conf /etc/apt/sources.list

# cleanup
run apt purge -y --autoremove ifupdown libfuse2 localepurge nano rsyslog tasksel
run apt-get clean
rm -rf "$ROOT/var"/{backups,tmp}/*
rm -rf "$ROOT"/*.old

umount "$ROOT/dev/pts"
umount "$ROOT/dev"
umount "$ROOT/proc"
umount "$ROOT/run"
umount "$ROOT/sys"
umount "$ROOT/tmp"
